// <auto-generated />
using System;
using CCC_Rugby_Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCC_Rugby_Web.Migrations
{
    [DbContext(typeof(CCC_DbContext))]
    [Migration("20250803235135_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BorradoLogico")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("borrado_logico");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("extension");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<byte[]>("bytes")
                        .IsRequired()
                        .HasColumnType("blob")
                        .HasColumnName("base64");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("archivo");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("apellidos");

                    b.Property<bool>("BorradoLogico")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("borrado_logico");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("documento");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("genero");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombres");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tipo_documento");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("TipoDocumento", "Documento")
                        .IsUnique();

                    b.ToTable("persona");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BorradoLogico")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("borrado_logico");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AvatarArchivoId")
                        .HasColumnType("int")
                        .HasColumnName("avatar_archivo_id");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bloqueado");

                    b.Property<bool>("BorradoLogico")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("borrado_logico");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<DateTime?>("LastLogin")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login");

                    b.Property<int>("LoginTrys")
                        .HasColumnType("int")
                        .HasColumnName("login_trys");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int")
                        .HasColumnName("persona_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("AvatarArchivoId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("PersonaId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.UsuarioRol", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RoleId");

                    b.ToTable("usuario_rol");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Archivo", b =>
                {
                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "CreatedByUsuario")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "DeletedByUsuario")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "UpdatedByUsuario")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUsuario");

                    b.Navigation("DeletedByUsuario");

                    b.Navigation("UpdatedByUsuario");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Persona", b =>
                {
                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "CreatedByUsuario")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "DeletedByUsuario")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "UpdatedByUsuario")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUsuario");

                    b.Navigation("DeletedByUsuario");

                    b.Navigation("UpdatedByUsuario");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Role", b =>
                {
                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "CreatedByUsuario")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "DeletedByUsuario")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "UpdatedByUsuario")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUsuario");

                    b.Navigation("DeletedByUsuario");

                    b.Navigation("UpdatedByUsuario");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.Usuario", b =>
                {
                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Archivo", "AvatarArchivo")
                        .WithMany()
                        .HasForeignKey("AvatarArchivoId");

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "DeletedByUsuario")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "UpdatedByUsuario")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvatarArchivo");

                    b.Navigation("DeletedByUsuario");

                    b.Navigation("Persona");

                    b.Navigation("UpdatedByUsuario");
                });

            modelBuilder.Entity("CCC_Rugby_Web.Models.Entityes.UsuarioRol", b =>
                {
                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CCC_Rugby_Web.Models.Entityes.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
